version: '3.8'
services:
  mysql8:
    image: mysql:8.0.30
    container_name: mysql8
    hostname: mysql8
    ports:
      - "3306:3306"
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - mysql8-data:/var/lib/mysql
    networks:
      - hadoop_hadoop_network

  nacos-server:
    image: nacos/nacos-server:v2.3.2
    hostname: nacos-server
    depends_on:
      - mysql8
    ports:
      - "8848:8848"
      - "9848:9848"
    environment:
      - MODE=standalone
      - SPRING_DATASOURCE_PLATFORM=mysql
      - MYSQL_SERVICE_HOST=mysql8
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_DB_NAME=sky_nacos_server
      - MYSQL_SERVICE_DB_PARAM=characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useUnicode=true&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
      - MYSQL_SERVICE_USER=root
      - MYSQL_SERVICE_PASSWORD=root
      - MYSQL_DATABASE_NUM=1
      - DB_POOL_CONNECTION_TIMEOUT=30000
      - NACOS_AUTH_ENABLE=true
      - NACOS_AUTH_TOKEN=VGhpc0lzTXlDdXN0b21TZWNyZXRLZXkwMTIzNDU2Nzg=
      - NACOS_AUTH_IDENTITY_KEY=AAA
      - NACOS_AUTH_IDENTITY_VALUE=BBB
    networks:
      - hadoop_hadoop_network

  # https://seata.apache.org/zh-cn/docs/ops/deploy-by-docker-compose/#nacos-db
  seata-server:
    image: seataio/seata-server:2.0.0
    hostname: seata-server
    depends_on:
      - nacos-server
      - mysql8
    ports:
      - "8091:8091"
      - "7091:7091"
    environment:
      - SEATA_PORT=8091
      - STORE_MODE=file
      # 以SEATA_IP作为host注册seata server。
      # 这里使用宿主机的IP，注册到容器内的IP地址如果是容器内的话，外部是无法访问的。
      - SEATA_IP=192.168.201.216
    volumes:
      - "/usr/share/zoneinfo/Asia/Shanghai:/etc/localtime"        #设置系统时区
      - "/usr/share/zoneinfo/Asia/Shanghai:/etc/timezone"  #设置时区
      # 假设我们通过docker cp命令把资源文件拷贝到相对路径`./seata-server/resources`中
      # 如有问题，请阅读上面的[注意事项]以及[使用自定义配置文件]
      - "./config/seata-server/application.yml:/seata-server/resources/application.yml"
    networks:
      - hadoop_hadoop_network

  rocketmq-dashboard:
    image: apacherocketmq/rocketmq-dashboard:latest
    hostname: rocketmq-dashboard
    container_name: rocketmq-dashboard
    ports:
      - "8089:8080"
    environment:
      - JAVA_OPTS=-Drocketmq.namesrv.addr=127.0.0.1:9876
    networks:
      - hadoop_hadoop_network

  namesrv:
    image: apache/rocketmq:5.3.2
    container_name: rmqnamesrv
    ports:
      - 9876:9876
    networks:
      - hadoop_hadoop_network
    command: sh mqnamesrv
  broker:
    image: apache/rocketmq:5.3.2
    container_name: rmqbroker
    ports:
      - 10909:10909
      - 10911:10911
      - 10912:10912
    environment:
      - NAMESRV_ADDR=rmqnamesrv:9876
    depends_on:
      - namesrv
    networks:
      - hadoop_hadoop_network
    command: sh mqbroker
  proxy:
    image: apache/rocketmq:5.3.2
    container_name: rmqproxy
    networks:
      - hadoop_hadoop_network
    depends_on:
      - broker
      - namesrv
    ports:
      - 8080:8080
      - 8081:8081
    restart: on-failure
    environment:
      - NAMESRV_ADDR=rmqnamesrv:9876
    command: sh mqproxy



volumes:
  esdata:
  mongodb-data:
  dinky-data:
  mysql8-data:
  minio-data:


# 连接外部网络
networks:
  hadoop_hadoop_network:
    external: true